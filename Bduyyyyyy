local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};_G.Cs={UQSDDAA=3,YASDMRXA=1,YASa0AVV=2};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 +  #Cs + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\181\176","\125\155\158\168\228\161"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v100=0;local v101;while true do if (0==v100) then v101=v10(v8(v42,16));if v30 then local v121=v13(v101,v30);v30=nil;return v121;else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/((4 -2)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 1 + 3 ;return (v53 * 16777216) + (v52 * (23157 + 42379)) + (v51 * 256) + v50 ;end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,62 -42 ) * ((5 -3)^(917 -(261 + 624)))) + v54 ;local v58=v31(v55,21,59 -28 );local v59=((v31(v55,32)==1) and  -(2 -1)) or 1 ;if (v58==(619 -(555 + 64))) then if (v57==(931 -(857 + 74))) then return v59 * (568 -(367 + 201)) ;else local v107=0;while true do if (v107==0) then v58=1;v56=927 -(214 + 713) ;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==2) then v63={};for v108=1, #v62 do v63[v108]=v10(v9(v11(v62,v108,v108)));end v61=3;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (3==v61) then return v14(v63);end if (v61==0) then v62=nil;if  not v60 then local v114=0;while true do if (v114==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=v32();local v79;if (v78==1) then v79=v32()~=0 ;elseif (v78==2) then v79=v35();elseif (v78==3) then v79=v36();end v69[v77]=v79;end v67[3]=v32();for v81=1,v34() do local v82=0;local v83;while true do if (v82==0) then v83=v32();if (v31(v83,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v123=0;while true do if (v123==0) then v120[1 + 2 ]=v33();v120[1427 -(630 + 793) ]=v33();break;end end elseif (v118==(878 -(282 + 595))) then v120[3]=v34();elseif (v118==2) then v120[9 -6 ]=v34() -(2^16) ;elseif (v118==3) then local v134=0;while true do if (v134==0) then v120[3]=v34() -((9 -7)^16) ;v120[4]=v33();break;end end end v117=2;end if (v117==3) then if (v31(v119,3,1640 -(1523 + 114) )==1) then v120[4]=v69[v120[4]];end v64[v81]=v120;break;end if (v117==0) then v118=v31(v83,2,3);v119=v31(v83,4,6);v117=1;end if (v117==2) then if (v31(v119,1,1 + 0 )==1) then v120[2]=v69[v120[2]];end if (v31(v119,2,6 -4 )==1) then v120[3]=v69[v120[3]];end v117=3;end end end break;end end end for v84=1 + 0 ,v34() do v65[v84-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v86=v74;local v87=v75;local v88=v76;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -(1748 -(760 + 987)) ;local v95={};local v96={};for v105=1913 -(1789 + 124) ,v94 do if (v105>=v88) then v92[v105-v88 ]=v93[v105 + 1 ];else v96[v105]=v93[v105 + (767 -(745 + 21)) ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v106=0;while true do if (v106==0) then v98=v86[v90];v99=v98[1];v106=1;end if (1==v106) then if (v99<=54) then if (v99<=26) then if (v99<=(16 -4)) then if (v99<=5) then if (v99<=(1 + 1)) then if (v99<=0) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v99>1) then local v175=v98[2];local v176={v96[v175](v96[v175 + 1 ])};local v177=0;for v357=v175,v98[4] do v177=v177 + 1 ;v96[v357]=v176[v177];end else local v178=v98[2];v96[v178](v96[v178 + 1 ]);end elseif (v99<=3) then local v136=v87[v98[3]];local v137;local v138={};v137=v18({},{[v7("\0\14\21\89\189\58\41","\217\95\81\124\55")]=function(v160,v161) local v162=0;local v163;while true do if (v162==0) then v163=v138[v161];return v163[1066 -(68 + 997) ][v163[2]];end end end,[v7("\17\99\33\200\151\36\223\42\89\55","\177\78\60\79\173\224\77")]=function(v164,v165,v166) local v167=0;local v168;while true do if (v167==0) then v168=v138[v165];v168[2 -1 ][v168[2]]=v166;break;end end end});for v169=1,v98[4] do local v170=0;local v171;while true do if (v170==1) then if (v171[1271 -(226 + 1044) ]==66) then v138[v169-1 ]={v96,v171[3]};else v138[v169-(1 + 0) ]={v72,v171[3]};end v95[ #v95 + 1 ]=v138;break;end if (v170==0) then v90=v90 + (3 -2) ;v171=v86[v90];v170=1;end end end v96[v98[1057 -(87 + 968) ]]=v40(v136,v137,v73);elseif (v99>4) then for v360=v98[8 -6 ],v98[3] do v96[v360]=nil;end else v96[v98[2]]=v98[120 -(32 + 85) ]~=0 ;end elseif (v99<=8) then if (v99<=6) then v96[v98[8 -6 ]]=v96[v98[3 + 0 ]] + v98[4] ;elseif (v99==7) then local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==1) then v91=(v183 + v181) -1 ;v184=0;v180=2;end if (v180==2) then for v460=v181,v91 do v184=v184 + 1 ;v96[v460]=v182[v184];end break;end if (v180==0) then v181=v98[2];v182,v183=v89(v96[v181](v21(v96,v181 + 1 ,v91)));v180=1;end end else v96[v98[2]][v98[3]]=v96[v98[4]];end elseif (v99<=10) then if (v99>(9 + 0)) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v187=0;local v188;while true do if (v187==0) then v188=v96[v98[1417 -(447 + 966) ]];if  not v188 then v90=v90 + 1 ;else local v497=0;while true do if (v497==0) then v96[v98[2]]=v188;v90=v98[3];break;end end end break;end end end elseif (v99==11) then do return v96[v98[2]];end else local v189=v98[2];local v190=v96[v189];for v362=v189 + (2 -1) ,v98[3] do v15(v190,v96[v362]);end end elseif (v99<=19) then if (v99<=15) then if (v99<=13) then local v141=v98[2];local v142,v143=v89(v96[v141](v96[v141 + 1 ]));v91=(v143 + v141) -1 ;local v144=0;for v172=v141,v91 do v144=v144 + 1 ;v96[v172]=v142[v144];end elseif (v99>14) then v96[v98[2]]=v96[v98[1 + 2 ]];else local v193=0;local v194;local v195;local v196;local v197;while true do if (1==v193) then v91=(v196 + v194) -1 ;v197=0;v193=2;end if (0==v193) then v194=v98[2];v195,v196=v89(v96[v194](v96[v194 + (958 -(892 + 65)) ]));v193=1;end if (v193==2) then for v463=v194,v91 do v197=v197 + 1 ;v96[v463]=v195[v197];end break;end end end elseif (v99<=(1834 -(1703 + 114))) then if (v99>16) then if (v96[v98[703 -(376 + 325) ]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[7 -4 ];end else local v198=0;local v199;local v200;while true do if (v198==0) then v199=v98[2];v200=v96[v199];v198=1;end if (v198==1) then for v466=v199 + 1 ,v91 do v15(v200,v96[v466]);end break;end end end elseif (v99==18) then local v201=0;local v202;while true do if (0==v201) then v202=v98[2 -0 ];v96[v202](v21(v96,v202 + 1 ,v91));break;end end else local v203=0;local v204;while true do if (v203==0) then v204=v98[3 -1 ];v96[v204](v21(v96,v204 + (1 -0) ,v98[3]));break;end end end elseif (v99<=22) then if (v99<=20) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>21) then do return;end elseif (v96[v98[2]]~=v98[8 -4 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=24) then if (v99>23) then local v206=0;local v207;local v208;while true do if (0==v206) then v207=v98[352 -(87 + 263) ];v208=v96[v98[3]];v206=1;end if (v206==1) then v96[v207 + 1 ]=v208;v96[v207]=v208[v98[4]];break;end end elseif (v96[v98[2]]==v98[18 -(9 + 5) ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>25) then v96[v98[2]][v98[3]]=v96[v98[4]];else v96[v98[182 -(67 + 113) ]][v96[v98[3]]]=v98[4];end elseif (v99<=40) then if (v99<=33) then if (v99<=29) then if (v99<=(20 + 7)) then v96[v98[1267 -(243 + 1022) ]]={};elseif (v99>28) then local v213=0;local v214;local v215;local v216;while true do if (v213==2) then if (v215>0) then if (v216<=v96[v214 + (3 -2) ]) then local v509=0;while true do if (v509==0) then v90=v98[3];v96[v214 + 3 ]=v216;break;end end end elseif (v216>=v96[v214 + 1 ]) then local v510=0;while true do if (v510==0) then v90=v98[3];v96[v214 + 3 ]=v216;break;end end end break;end if (v213==1) then v216=v96[v214] + v215 ;v96[v214]=v216;v213=2;end if (v213==0) then v214=v98[2];v215=v96[v214 + 2 ];v213=1;end end else v90=v98[3];end elseif (v99<=31) then if (v99==30) then local v218=v98[2];local v219={};for v363=1, #v95 do local v364=0;local v365;while true do if (v364==0) then v365=v95[v363];for v498=0, #v365 do local v499=0;local v500;local v501;local v502;while true do if (v499==0) then v500=v365[v498];v501=v500[1];v499=1;end if (v499==1) then v502=v500[2];if ((v501==v96) and (v502>=v218)) then v219[v502]=v501[v502];v500[1]=v219;end break;end end end break;end end end else local v220=v98[2];local v221={v96[v220](v96[v220 + 1 ])};local v222=0;for v366=v220,v98[4] do v222=v222 + 1 ;v96[v366]=v221[v222];end end elseif (v99==(78 -46)) then local v223=v98[2];v96[v223](v21(v96,v223 + 1 ,v91));else local v224=v98[2];do return v96[v224](v21(v96,v224 + 1 + 0 ,v98[3]));end end elseif (v99<=36) then if (v99<=34) then v96[v98[2]]=v98[3];elseif (v99>35) then v96[v98[2 + 0 ]]=v96[v98[3]] + v96[v98[4]] ;else local v226=0;local v227;local v228;while true do if (v226==0) then v227=v98[2];v228=v96[v227];v226=1;end if (v226==1) then for v468=v227 + 1 ,v91 do v15(v228,v96[v468]);end break;end end end elseif (v99<=38) then if (v99>37) then local v229=v98[2];local v230,v231=v89(v96[v229](v21(v96,v229 + (3 -2) ,v91)));v91=(v231 + v229) -1 ;local v232=0;for v369=v229,v91 do local v370=0;while true do if (0==v370) then v232=v232 + (1181 -(1123 + 57)) ;v96[v369]=v230[v232];break;end end end elseif (v96[v98[954 -(802 + 150) ]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==39) then local v233=v98[2];local v234={v96[v233](v21(v96,v233 + 1 ,v91))};local v235=0;for v371=v233,v98[4] do local v372=0;while true do if (v372==0) then v235=v235 + 1 ;v96[v371]=v234[v235];break;end end end else v96[v98[2]]=v72[v98[3]];end elseif (v99<=47) then if (v99<=43) then if (v99<=41) then local v148=v98[2];do return v96[v148](v21(v96,v148 + 1 ,v98[3]));end elseif (v99>(1972 -(1869 + 61))) then local v238=0;local v239;while true do if (v238==0) then v239=v98[2];v96[v239]=v96[v239](v96[v239 + 1 ]);break;end end else local v240=0;local v241;local v242;while true do if (v240==0) then v241=v98[3];v242=v96[v241];v240=1;end if (v240==1) then for v473=v241 + 1 + 0 ,v98[4] do v242=v242   .. v96[v473] ;end v96[v98[5 -3 ]]=v242;break;end end end elseif (v99<=45) then if (v99>(154 -110)) then local v243=v98[2];v96[v243]=v96[v243](v21(v96,v243 + (1 -0) ,v91));else local v245=v98[1 + 1 ];local v246={};for v373=1 -0 , #v95 do local v374=v95[v373];for v406=0 -0 , #v374 do local v407=v374[v406];local v408=v407[1 + 0 ];local v409=v407[2 + 0 ];if ((v408==v96) and (v409>=v245)) then local v474=0;while true do if (v474==0) then v246[v409]=v408[v409];v407[1]=v246;break;end end end end end end elseif (v99==46) then v96[v98[1476 -(1329 + 145) ]]=v73[v98[3]];else v96[v98[2]]=v73[v98[3]];end elseif (v99<=(1047 -(915 + 82))) then if (v99<=48) then if  not v96[v98[973 -(140 + 831) ]] then v90=v90 + 1 ;else v90=v98[1853 -(1409 + 441) ];end elseif (v99==49) then local v252=v98[2];v96[v252]=v96[v252](v21(v96,v252 + (719 -(15 + 703)) ,v98[3]));else local v254=0;local v255;while true do if (v254==0) then v255=v98[5 -3 ];do return v21(v96,v255,v91);end break;end end end elseif (v99<=52) then if (v99>51) then local v256=0;local v257;while true do if (0==v256) then v257=v96[v98[4]];if  not v257 then v90=v90 + 1 ;else v96[v98[2]]=v257;v90=v98[2 + 1 ];end break;end end else v96[v98[2 + 0 ]]=v96[v98[3]]%v96[v98[442 -(262 + 176) ]] ;end elseif (v99==53) then do return v96[v98[1723 -(345 + 1376) ]]();end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=81) then if (v99<=67) then if (v99<=(78 -18)) then if (v99<=57) then if (v99<=55) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==56) then local v261=v98[2];local v262=v96[v261 + 2 ];local v263=v96[v261] + v262 ;v96[v261]=v263;if (v262>0) then if (v263<=v96[v261 + 1 ]) then v90=v98[691 -(198 + 490) ];v96[v261 + 3 ]=v263;end elseif (v263>=v96[v261 + 1 ]) then local v477=0;while true do if (v477==0) then v90=v98[3];v96[v261 + 3 ]=v263;break;end end end else v96[v98[2]]={};end elseif (v99<=58) then do return v96[v98[2]];end elseif (v99==59) then v96[v98[2]][v98[3]]=v98[4];else v90=v98[1190 -(1069 + 118) ];end elseif (v99<=(278 -215)) then if (v99<=61) then local v149=0;local v150;while true do if (0==v149) then v150=v98[2];v96[v150]=v96[v150](v21(v96,v150 + 1 ,v98[3]));break;end end elseif (v99>62) then local v269=v98[2];v96[v269](v21(v96,v269 + (2 -1) ,v98[3]));else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=65) then if (v99>64) then local v271=v98[2];local v272=v98[4];local v273=v271 + 2 ;local v274={v96[v271](v96[v271 + 1 ],v96[v273])};for v377=1 -0 ,v272 do v96[v273 + v377 ]=v274[v377];end local v275=v274[1];if v275 then local v410=0;while true do if (v410==0) then v96[v273]=v275;v90=v98[1 + 2 ];break;end end else v90=v90 + 1 ;end else v96[v98[3 -1 ]]=v96[v98[3]] + v96[v98[4]] ;end elseif (v99>66) then v96[v98[2]]=v96[v98[4 -1 ]]%v96[v98[1266 -(1091 + 171) ]] ;else v96[v98[2]]=v96[v98[3]];end elseif (v99<=74) then if (v99<=70) then if (v99<=68) then v96[v98[2]]=v96[v98[3 + 0 ]][v96[v98[4]]];elseif (v99>69) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else local v281=0;local v282;local v283;while true do if (v281==0) then v282=v98[3];v283=v96[v282];v281=1;end if (v281==1) then for v478=v282 + 1 ,v98[4] do v283=v283   .. v96[v478] ;end v96[v98[2]]=v283;break;end end end elseif (v99<=(863 -(368 + 423))) then if (v99==71) then local v284=v98[2];do return v21(v96,v284,v91);end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99==73) then v96[v98[6 -4 ]][v96[v98[9 -6 ]]]=v96[v98[4]];else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=77) then if (v99<=75) then local v153=0;local v154;local v155;local v156;local v157;while true do if (0==v153) then v154=v98[2];v155,v156=v89(v96[v154](v21(v96,v154 + 1 ,v98[9 -6 ])));v153=1;end if (v153==1) then v91=(v156 + v154) -1 ;v157=0;v153=2;end if (v153==2) then for v411=v154,v91 do v157=v157 + 1 ;v96[v411]=v155[v157];end break;end end elseif (v99==76) then local v291=v98[20 -(10 + 8) ];local v292=v96[v291];local v293=v98[377 -(123 + 251) ];for v381=3 -2 ,v293 do v292[v381]=v96[v291 + v381 ];end else local v294=v98[2];v96[v294]=v96[v294](v21(v96,v294 + 1 ,v91));end elseif (v99<=79) then if (v99==78) then if (v98[444 -(416 + 26) ]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else do return v96[v98[2]]();end end elseif (v99==80) then local v296=0;local v297;local v298;local v299;while true do if (v296==2) then for v479=4 -3 ,v98[4] do local v480=0;local v481;while true do if (v480==0) then v90=v90 + (699 -(208 + 490)) ;v481=v86[v90];v480=1;end if (v480==1) then if (v481[1]==66) then v299[v479-1 ]={v96,v481[3]};else v299[v479-1 ]={v72,v481[3]};end v95[ #v95 + 1 ]=v299;break;end end end v96[v98[2]]=v40(v297,v298,v73);break;end if (v296==1) then v299={};v298=v18({},{[v7("\212\121\198\69\42\129\71","\63\139\38\175\43\78\228")]=function(v482,v483) local v484=v299[v483];return v484[1][v484[2]];end,[v7("\61\186\192\93\21\140\192\92\7\157","\56\98\229\174")]=function(v485,v486,v487) local v488=0;local v489;while true do if (v488==0) then v489=v299[v486];v489[1][v489[6 -4 ]]=v487;break;end end end});v296=2;end if (v296==0) then v297=v87[v98[3]];v298=nil;v296=1;end end else local v300=0;local v301;while true do if (v300==0) then v301=v98[2];v96[v301]=v96[v301]();break;end end end elseif (v99<=95) then if (v99<=88) then if (v99<=84) then if (v99<=82) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[839 -(660 + 176) ];end elseif (v99>(10 + 73)) then for v384=v98[2],v98[205 -(14 + 188) ] do v96[v384]=nil;end else local v303=0;local v304;while true do if (v303==0) then v304=v98[1 + 1 ];v96[v304](v96[v304 + 1 ]);break;end end end elseif (v99<=86) then if (v99>85) then local v305=v98[2];v96[v305]=v96[v305]();else v96[v98[3 -1 ]]= #v96[v98[441 -(145 + 293) ]];end elseif (v99==87) then do return;end else v96[v98[2]]= #v96[v98[678 -(534 + 141) ]];end elseif (v99<=91) then if (v99<=89) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>90) then v96[v98[1 + 1 ]]=v96[v98[433 -(44 + 386) ]][v98[4]];else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=93) then if (v99==92) then v96[v98[2]]=v96[v98[3]][v98[4 + 0 ]];elseif (v98[2]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>94) then v96[v98[2]]=v98[3];else v96[v98[2]][v96[v98[6 -3 ]]]=v96[v98[4]];end elseif (v99<=102) then if (v99<=98) then if (v99<=96) then local v158=0;local v159;while true do if (0==v158) then v159=v98[2];do return v21(v96,v159,v159 + v98[3] );end break;end end elseif (v99==97) then local v319=0;local v320;while true do if (0==v319) then v320=v98[2];v96[v320]=v96[v320](v96[v320 + (1487 -(998 + 488)) ]);break;end end else local v321=0;local v322;local v323;local v324;while true do if (v321==1) then v324=v96[v322 + 2 ];if (v324>(0 + 0)) then if (v323>v96[v322 + 1 ]) then v90=v98[3];else v96[v322 + 3 ]=v323;end elseif (v323<v96[v322 + 1 ]) then v90=v98[3];else v96[v322 + 1 + 2 ]=v323;end break;end if (v321==0) then v322=v98[5 -3 ];v323=v96[v322];v321=1;end end end elseif (v99<=(82 + 18)) then if (v99==99) then local v325=v98[774 -(201 + 571) ];local v326=v96[v325];local v327=v96[v325 + 2 ];if (v327>0) then if (v326>v96[v325 + 1 ]) then v90=v98[3];else v96[v325 + 3 ]=v326;end elseif (v326<v96[v325 + 1 ]) then v90=v98[3];else v96[v325 + 3 ]=v326;end else local v328=v98[2 + 0 ];local v329=v98[1142 -(116 + 1022) ];local v330=v328 + 2 ;local v331={v96[v328](v96[v328 + 1 ],v96[v330])};for v387=397 -(115 + 281) ,v329 do v96[v330 + v387 ]=v331[v387];end local v332=v331[1];if v332 then local v416=0;while true do if (v416==0) then v96[v330]=v332;v90=v98[3];break;end end else v90=v90 + 1 ;end end elseif (v99>(420 -319)) then local v333=v98[2];local v334,v335=v89(v96[v333](v21(v96,v333 + 1 ,v98[2 + 1 ])));v91=(v335 + v333) -(3 -2) ;local v336=0;for v390=v333,v91 do v336=v336 + 1 ;v96[v390]=v334[v336];end else v96[v98[7 -5 ]]=v96[v98[3]][v96[v98[4]]];end elseif (v99<=105) then if (v99<=103) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>104) then local v340=v98[2];local v341={v96[v340](v21(v96,v340 + 1 ,v91))};local v342=0;for v393=v340,v98[4] do v342=v342 + 1 ;v96[v393]=v341[v342];end elseif v96[v98[2]] then v90=v90 + (2 -1) ;else v90=v98[3];end elseif (v99<=107) then if (v99>106) then local v343=0;local v344;local v345;local v346;while true do if (v343==1) then v346=v98[3 + 0 ];for v494=1,v346 do v345[v494]=v96[v344 + v494 ];end break;end if (v343==0) then v344=v98[2];v345=v96[v344];v343=1;end end else v96[v98[2]]=v98[7 -4 ] + v96[v98[14 -10 ]] ;end elseif (v99>(967 -(814 + 45))) then v96[v98[2]]=v72[v98[3]];else local v350=v98[2];local v351=v96[v98[3]];v96[v350 + 1 ]=v351;v96[v350]=v351[v98[4]];end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return v23("LOL!",v17(),...);
